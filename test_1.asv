clear;clc;close all;

imgIndex = [1];
DM = {'bilinear', 'homogeneity', 'frequency'};

for i=1:length(imgIndex)

    % read ground truth image
    imgFile = sprintf('kodim/kodim%02d.png', imgIndex(i));
    trueImage = imresize(double(imread(imgFile)), 1);
    trueImage = trueImage ./ max(trueImage(:));

    % CFA: GRBG
    % simulate cfa image
    rawImage = mosaicRGB(trueImage);

    % aware that matlab is terrible at displaying images
    % zoom in to get rid of aliasing effects
    figure(1);
    displayRAW(rawImage);

    imgCFA = zeros([size(rawImage), 3]);

    imgCFA(1:2:size(rawImage,1), 1:2:size(rawImage,2), 2) = rawImage(1:2:size(rawImage,1), 1:2:size(rawImage,2));
    imgCFA(2:2:size(rawImage,1), 2:2:size(rawImage,2), 2) = rawImage(2:2:size(rawImage,1), 2:2:size(rawImage,2));
    imgCFA(1:2:size(rawImage,1), 2:2:size(rawImage,2), 1) = rawImage(1:2:size(rawImage,1), 2:2:size(rawImage,2));
    imgCFA(2:2:size(rawImage,1), 1:2:size(rawImage,2), 3) = rawImage(2:2:size(rawImage,1), 1:2:size(rawImage,2));
    
    ind=sprintf('test%02d.jpg',i);
    imwrite(imgCFA,ind,'jpg');
    
    fp = fopen(ind,'r');
    jpeg_data=fread(fp,[1,inf],'uchar');
    fclose(fp);
    
    compression_ratio=size(trueimage,1)*size(trueimage,2)*size(trueimage,3)/(length(jpeg_data)-623);
    
    imread
    % apply demosaic algorithms and evaluate errors
%    for j=1:length(DM)
%        disp(['Demosaicking... ' DM{j}]);
%        dmImage = applyDemosaic(rawImage, DM{j});
%        mse(j) = evaluateQuality(trueImage, dmImage, 'mse');
%        psnr(j) = evaluateQuality(trueImage, dmImage, 'psnr');
%        scielab(j) = evaluateQuality(trueImage, dmImage, 'scielab');
%        figure(2); subplot(1,length(DM),j); displayRGB(dmImage); title(DM{j});
%    end

%    figure(3);
%    subplot(131); bar(mse); title('mse');
%    subplot(132); bar(psnr); title('psnr');
%    subplot(133); bar(scielab); title('scielab');

end

